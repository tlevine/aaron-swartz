<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en-US" lang="en-US">
<head>
	<title>Point-Headed Academics vs. Pointy-Haired Bosses (Aaron Swartz: The Weblog)</title>
	<link rel="stylesheet" href="style.css" type="text/css" />
	<link rel="alternate" type="application/rss+xml" title="RSS" href="index.xml" />
	<link rel="home" href="index.html" title="Home" />	<link rel="prev" href="000269" title="The Lawyers Strike Back" />	<link rel="next" href="000272" title="Other" />
<!--

-->

</head>
<body>	
<div id="banner">
	<h1>Point-Headed Academics vs. Pointy-Haired Bosses</h1>
</div>

<div class="content">
<p>Paul Graham: <a href="http://www.paulgraham.com/icad.html">Revenge of the Nerds</a>. &#8220;The Pointy-Haired boss [&#8230;] (a) [] knows nothing whatsoever about technology, and (b) [] has very strong opinions about it.&#8221;</p>

<p>&#8220;If you look at these languages in order, Java, Perl, Python, [&#8230;] Each one is progressively more like Lisp. Python copies even features that many Lisp hackers consider to be mistakes. You could translate simple Lisp programs into Python line for line. It&#8217;s 2002, and programming languages have almost caught up with 1958.&#8221;</p>

<p>&#8220;So the short explanation of why this 1950s language [Lisp] is not obsolete is that it was not technology but math, and math doesn&#8217;t get stale.&#8221; &#8220;Lisp started out powerful, and over the next twenty years got fast. So-called mainstream languages started out fast, and over the next forty years gradually got more powerful, until now the most advanced of them are fairly close to Lisp. Close, but they are still missing a few things.&#8230;&#8221;</p>

<p>PaulG and Raph corrected my criticism of PaulG&#8217;s Python criticism. (<em>Thanks!</em>) While building an accumulator cannot be done in Python, it does appear to be something of an edge case. He wants the function to have state, which is something traditionally left to objects. Raph: &#8220;In Python, you tend to use objects where in lexically scoped Lisp you would use closures. I&#8217;ve done some pretty edgy Python coding (including the implementation of a small lazy functional language), and have not felt the need for the construct that Paul describes. It is more of an edge case than a core language feature.&#8221;</p>

<p>PaulP <a href="http://www.ai.mit.edu/~gregs/ll1-discuss-archive-html/msg01451.html">has some comments</a> over on the <a href="http://ll1.mit.edu/body-frame.html">Lightweight Languages discussion list</a>.</p>

<p class="posted">posted May 21, 2002 01:00 AM (<a class="category" href="http://www.aaronsw.com/weblog/cat_technology">Technology</a>)  <a href="000270" rel="bookmark">#</a></p>
</div>

<div class="box">
<h2>Nearby</h2>
<p class="menu"><a href="000269" title="The Lawyers Strike Back">&laquo; prev</a> | <a href="index.html">up</a> | <a href="000272" title="Other">next &raquo;</a></p>

<p><a href="000257">MarkM and AaronSw</a><br />
<a href="000258">The Secret alife of Webloggers</a><br />
<a href="000259">Others</a><br />
<a href="000261">Crypto History</a><br />
<a href="000269">The Lawyers Strike Back</a><br />
<strong>Point-Headed Academics vs. Pointy-Haired Bosses</strong><br />
<a href="000272">Other</a><br />
<a href="000273">Problems with MakeAShorterLink</a><br />
<a href="000274">New Hacks</a><br />
<a href="000277">Copyright Terrorism</a><br />
<a href="000279">Emerging Technology 2002 Photos</a><br /></p>
</div>

<address><a href="../index.html">Aaron Swartz</a> (<a href="mailto:me@aaronsw.com">me@aaronsw.com</a>)</address>
</body>
</html>