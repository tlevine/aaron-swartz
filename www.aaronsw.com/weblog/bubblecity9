<!DOCTYPE html>
<html>
<head>
  <title>Bubble City: Chapter 9 (Aaron Swartz's Raw Thought)</title>
  <link rel="home" href="index.html" title="Home" />
  <link rel="stylesheet" href="oldstyle.css" type="text/css" />
</head>
<body>	
<h1 class="title"><a href="index.html" class="hilite" title="by Aaron Swartz">Raw Thought</a></h1>	
<p class="byline" style="float: right">by <a href="../index.html">Aaron Swartz</a></p>

<div class="content">
<h1>Bubble City: Chapter 9</h1>

<p>Derren, head of sensitive public relations operations for Google, had to figure out what to do about Jason. Normally Google prided itself on being very &#8220;flat&#8221; &#8212; few people were in charge, most people worked in teams. But the bosses had decided that public relations had to be special, which meant that all these tough choices fell on Derren&#8217;s shoulders alone.</p>

<p>But Derren knew better than that. He&#8217;d previously had a similar position at Yahoo, where the Chinese government made him give up the names of bloggers to their secret police. The guilt wouldn&#8217;t go away for weeks. Derren was sick of that kind of stress.</p>

<p>Google was a company of hackers, so when he moved there he got there he had the programmers whip up a technical solution to his social problem. Now when he faced a tough decision like this, he punched the key facts into the computer and had his team vote on the solution. That way it wasn&#8217;t his decision &#8212; it was simply the &#8220;wisdom of crowds,&#8221; the aggregated knowledge of Google&#8217;s crack team of spooks.</p>

<p>Describing Jason&#8217;s case would be simple:</p>

<blockquote>
  <p>Fresh MIT grad discovers backdoor in key public algorithm. Works at related SF startup. Doesn&#8217;t yet have enough details to go public.</p>
  
  <p>Should we:</p>
  
  <ul>
  <li>Nab him and begin the coverup.</li>
  <li>Infiltrate his office and friends and follow his progress.</li>
  <li>Do nothing.</li>
  </ul>
</blockquote>

<p>He always left that last one in there just to make sure his ass was covered. But it almost never got any votes.</p>

<p>He sent out the questionnaire and watched the results pour in. There was the support from the kidnapping crowd for immediately seizing the kid and figuring out the questions later, but most of the team supported the more cautious position. Fair enough.</p>

<p>He looked to see what staff he had available and dispatched one woman to get more details from the kids boss, just to make sure he was oblivious and dispatched a guy to get to know the kid&#8217;s girlfriend. Finally, he assigned an office drone to monitor the kid and keep tabs on his progress. The guy who&#8217;d done the original work-up was still available, so he pushed the task back to him.</p>

<p>Boy, this job sure was easier without the guilt.</p>

<hr />

<p>Jason started noticing them at the gym. Guys that geeky didn&#8217;t work out. And certainly not with those dorky glasses still on. And whenever he biked anywhere he was followed by an unusually large number of white Priuses. At first he ascribed things to paranoia &#8212; he&#8217;d been having weird dreams ever since his visit to Miller == but when he got to the office he ran some numbers and calculated the probability of seeing that many white Priuses in San Francisco and realized something was up.</p>

<p>Dorks. Priuses. His work on NNA. What did it all add up to? Did the media industry have some secret San Francisco team working on the NNA backdoor? No, that couldn&#8217;t be &#8212; anyone the media industry hired would be way more attractive. And then it hit him &#8212; the only organization that fit the combination of stealthiness, geekiness, and obsessive control: Google.</p>

<p><em>Shit</em>, he thought.</p>

<p>He looked around to see how they were tracking on him. Open on his screen was a Google query for white priuses in San Francisco. <em>Fuck</em>, he thought, quickly closing it. They knew he was on to them; they were sure to close in on him now. He quickly set up a rule in his firewall to block all outgoing connections to Google servers. He watched his other search queries, his email, his calendar, and his chats all go dead. Soon his desktop search thing fizzled out too.</p>

<p>He tried to think of other Google products, but his officemate was laughing at some stupid YouTube video. Oh, damn, YouTube. He blocked that too, along with Blogger. In fact, he blocked the whole Google IP space. There was time to figure out how to circumvent this stuff later.</p>

<p>He looked around for other Google products. Surely they couldn&#8217;t track him with his Google tshirts. But his phone! It not only ran Google apps, but a Google OS. He had to toss it. He removed the battery, ran a magnet over the case, and tossed the result in the trash. In fact, maybe it&#8217;d just be safer to toss his whole computer as well. At the very least, he changed the password on his hard drive encryption and removed the battery and power cord and stuffed it in his bag.</p>

<p>Shit, the dorks were at the receptionist. He had to get out. He ducked under his desk so he could think. Soon they&#8217;d be at his desk. He couldn&#8217;t be here. He vaguely recalled seeing some back door over by the bathrooms, so he crawled that way. Luckily, most of the office was too enthralled by their monitors to notice.</p>

<p>He snuck out the door and jogged to the BART station. He bought a new ticket, with cash (just to be on the safe side &#8212; hadn&#8217;t he heard something about Google beta-testing a new public transit program?) He rode the train all the way to Bay Point, on the theory that getting as far away from Google as possible would be a good idea right now.</p>

<p>He spent the whole train ride shifty and nervously looking at the other passengers, seeing if any of them were suspiciously geeky. But few people seemed to last the whole ride from San Francisco to Bay Point; mostly they got rotated. So eventually he calmed down and tried to plot his next move.</p>

<p>When he got off he began looking for a library where he might be able to get an Internet connection. He was obviously a bit wary of using Google, even though it&#8217;d be pretty impressive for them to track him from a random library computer, so he went to <a href="https://ssl.scroogle.org/">scroogle.org</a>, a site that let you do Google searches while hiding your IP address. Instead of visiting Google directly, you sent your query to Scroogle, which passed the query on to Google and then back to you, after stripping out all the Google tracking cookies and the ads.</p>

<p>For other Google products there was <a href="http://tor.eff.org/">Tor</a>, a clever little app that encrypted your Internet usage and bounced it through three machines around the world before sending it on to its intended destination. At every step, your traffic gets encrypted a different way and delayed a small amount, so that even an observer listening to every single bit of Internet traffic can&#8217;t keep track of which was yours.</p>

<p>Think of it this way: Imagine you want to get across town without being followed by a spy satellite that can see everything from overhead. Well, first you leave your house &#8212; the spy satellite can see that, of course &#8212; and you head to a department store. Inside the department store, you toss your clothes and buy all new ones. Then, when you come out, you look like a completely different person &#8212; the guy using the spy satellite can&#8217;t tell which person leaving the store is you. Then, just in case the guy using the spy satellite cut a deal with the department store&#8217;s security cameras, you do this a couple more times with different department stores. Finally, pretty confident you&#8217;ve lost the spy, you head to your final destination.</p>

<p>Tor works the same way, only instead of you there&#8217;s your message and instead of new clothes there&#8217;s encryption. You first pick out three Tor servers (the equivalent of the department store) that you want to route your message to. First you write out a note saying &#8220;please send the following message to www.google.com&#8221; with the message and encrypt it so that only the third computer on your list can read it. Then you write out &#8220;please send this to [the third Tor server]&#8221; and the previous encrypted message and encrypt that. And then you write out &#8220;please send this to [the second Tor server]&#8221; and the previous encrypted message. Then you encrypt that and send it to the first computer on your list. It decrypts it, follows the instructions, and all the other servers do the same.</p>

<p>Of course all of this was for nothing if you ever logged into a Google product or even accepted a Google cookie &#8212; a special tracking number that Google send out with every web page they serve. Most browsers automatically save the tracking number and send it back every time you visit something on google.com. Cookies were designed so that when you logged into something like your email, you would stay logged in. The first time you typed your email and password, you&#8217;d get back a cookie proving you&#8217;d logged in. Then, every other time you visited the site, your browser would send back the cookie and the site would know you were logged in.</p>

<p>But pretty quickly, sites started using this to track all their visitors. Instead of sending cookies only when you logged in, they sent them to every user, allowing them to keep track of people even when they took their laptop to a new place or disguised their connections through something like Tor. Google, of course, does the same, giving every Google visitor a tracking number that identifies their computer forever.</p>

<p>Thus, to be sure Google can&#8217;t track you, you need to do at least three things: never long in, never accept tracking cookies, and use some kind of anonymization of your IP address (like Scroogle or Tor). And that&#8217;s just for the Web.</p>

<p>God, this was going to be hard.</p>

<p><em>Tomorrow:</em> <a href="bubblecity10">Chapter Ten</a></p>


<p><i>You should follow me on twitter <a href="http://twitter.com/aaronsw">here</a>.</i></p>
<p class="posted">November 19, 2007</p>

<script type="text/javascript"><!--
if (document.location.hash.substring(0, 2) != '#c') {
  document.write('<style type="text/css">#comments_body { display: none}</style>');
}
//--></script>

<div id="comments_body">


<h2 id="comments">Comments</h2>

<div id="c1">
<p>I didn&#8217;t realise Scroogle had an SSL interface, nice. Although it does beg the question, who promotes Scroogle? Can you trust them? Using their service is just choosing to use them instead of Google. Maybe I&#8217;ll start using Scroogle through Tor&#8230; :)</p>

<p class="posted">posted by <a rel="nofollow" href="http://www.callum-macdonald.com/">Callum</a>
 on November 20, 2007 <a href="bubblecity9#c1" rel="bookmark">#</a></p>
</div>
<div id="c13">
<p>A few more suggestions:</p>

<p>Jason seems to have figured out Google way too quickly&#8230; doesn&#8217;t seem realistic.</p>

<p>Also, the paragraphs about Tor and Google anonymization seems to be too out-of-place for a story like this.</p>

<p class="posted">posted by Andrew
 on January 16, 2009 <a href="bubblecity9#c13" rel="bookmark">#</a></p>
</div>

<p>You can also <a href="mailto:weblog@aaronsw.com">send comments by email</a>.</p> 

<form action="http://www.aaronsw.com/weblog/code/comment.cgi" method="post">
<input type="hidden" name="eid" value="bubblecity9" />
<table>
<tr><th>Name</th><td> <input type="text" name="name" /></td></tr>
<tr><th>Site</th><td><input type="text" name="url" value="http://" /></td></tr>
<tr><th>Email</th><td><input type="text" name="email" /> (only used for direct replies)</td></tr>
<tr><td colspan="2"><textarea name="content" rows="10" cols="50"></textarea></td></tr>
<tr><td colspan="2"><input type="submit" value="Publish" /> <em>Comments may be edited for length and content.</em></td></tr>
</table>
</form>
<p></p>

</div>

<script type="text/javascript"><!--
function showComments() {
  document.getElementById('comments_show').style.display='none';
  document.getElementById('comments_body').style.display='block';
  return false;
}
if (document.location.hash.substring(0, 2) != '#c') {
  document.write('<p id="comments_show"><a href="#comments" onclick="return showComments();">Read comments.</a></p>');
}
//--></script>

</div> 

<p class="footertag"><a href="http://theinfo.org/">Powered by theinfo.org.</a></p>

</body> 
</html>